spring:
  profiles.active: dev
  mail:
    host: ${MAIL_SENDER_HOST}
    port: ${MAIL_SENDER_PORT}
    username: ${MAIL_SENDER_USERNAME}
    password: ${MAIL_SENDER_PASSWORD}
    properties.mail.smtp.auth: true
    properties.mail.smtp.starttls.enable: true

  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.xml
    contexts: dev
    default-schema: public
server:
  port: 8088

logging:
  level:
    org.springframework.web: INFO
    org.springframework.security: DEBUG

---
spring:
  config:
    activate:
      on-profile: liquibaseUpdate
  datasource:
    url: jdbc:postgresql://localhost:5432/postgres
    username: postgres
    password: password
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: create-drop
  liquibase:
    enabled: false

---

spring:
  config:
    activate:
      on-profile: integrationTest
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  liquibase:
    contexts: test
logging:
  level:
    org:
      liquibase: DEBUG
---
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:h2:mem:datarecovery
    driverClassName: org.h2.Driver
    username: sa
    password: password
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    properties:
      hibernate.format_sql: true
---
spring:
  config:
    activate:
      on-profile: production
  datasource:
    url: jdbc:postgresql://db:5432/postgres
    username: postgres
    password: ${POSTGRES_PASSWORD}
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate
  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.xml
    contexts: prod
    default-schema: public
